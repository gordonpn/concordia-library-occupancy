---
kind: pipeline
type: docker
name: deploy

steps:
  - name: slack before
    image: plugins/slack
    settings:
      channel: drone-ci
      template: >
        {{build.event}} on branch {{build.branch}} from repo {{repo.name}}

        build #{{build.number}} started!

        {{build.link}}
      webhook:
        from_secret: SLACK_WEBHOOK_URL
  - name: deploy staging
    image: docker/compose:1.25.5
    environment:
      DOMAIN:
        from_secret: DOMAIN
      MONGO_INITDB_ROOT_USERNAME:
        from_secret: MONGO_INITDB_ROOT_USERNAME
      MONGO_INITDB_ROOT_PASSWORD:
        from_secret: MONGO_INITDB_ROOT_PASSWORD
      OPEN_DATA_USER:
        from_secret: OPEN_DATA_USER
      OPEN_DATA_KEY:
        from_secret: OPEN_DATA_KEY
      MONGO_INITDB_DATABASE:
        from_secret: MONGO_INITDB_DATABASE
      MONGO_NON_ROOT_ROLE:
        from_secret: MONGO_NON_ROOT_ROLE
      MONGO_NON_ROOT_USERNAME:
        from_secret: MONGO_NON_ROOT_USERNAME
      MONGO_NON_ROOT_PASSWORD:
        from_secret: MONGO_NON_ROOT_PASSWORD
      COMPOSE_PROJECT_NAME: library
    volumes:
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - docker-compose -f /drone/src/docker-compose.dev.yml up --detach --build
  - name: slack after
    image: plugins/slack
    settings:
      channel: drone-ci
      template: >
        {{repo.name}}:
        {{#success build.status}}
        build #{{build.number}} succeeded!
        {{else}}
        build #{{build.number}} failed!
        {{/success}}
      webhook:
        from_secret: SLACK_WEBHOOK_URL
    when:
      status: [ success, failure ]

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock

trigger:
  branch: develop
  event: push
